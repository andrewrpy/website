<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>doc2vec on Andrea Perlato</title>
    <link>/tags/doc2vec/</link>
    <description>Recent content in doc2vec on Andrea Perlato</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 06 Aug 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/doc2vec/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Predict Movie Sentiment via DOC2VEC</title>
      <link>/aipost/predict-movie-sentiment-via-doc2vec/</link>
      <pubDate>Tue, 06 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/aipost/predict-movie-sentiment-via-doc2vec/</guid>
      <description>body {text-align: justify}In order to have an introduction of the Word2Vec look at this post.Using this method we try to predict the movie sentiment (positive vs.Â negative) using text data as predictor. We use the movie review data set, and we use the power of Doc2Vec to transform our data into predictors.
library(text2vec)library(tm)data(movie_review)names(movie_review)[1] &amp;quot;id&amp;quot; &amp;quot;sentiment&amp;quot; &amp;quot;review&amp;quot; The data set contain an id, sentiment (0=negative, 1=positive), and review that contains the text if people like the movie or not.</description>
    </item>
    
  </channel>
</rss>