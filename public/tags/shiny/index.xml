<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>shiny on Andrea Perlato</title>
    <link>/tags/shiny/</link>
    <description>Recent content in shiny on Andrea Perlato</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 31 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/shiny/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Feature of Automobiles via Web App</title>
      <link>/graphpost/feature-of-automobiles-via-web-app/</link>
      <pubDate>Wed, 31 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/graphpost/feature-of-automobiles-via-web-app/</guid>
      <description>body {text-align: justify}This is an iteractive web applicatioin created in shiny. It is an interactive approach to telling data story. Here below, an example using feaure of cars from the Mtcars dataset. The Web App need about 15 sec to be loaded here below, please wait :-)
In this example we have a dropdown menu on the left dynamically populated from the data. For each feature inside the dropdown menu we have a count of the unique values per each features.</description>
    </item>
    
    <item>
      <title>Interactive Dashboard</title>
      <link>/graphpost/interactive-dashboard/</link>
      <pubDate>Wed, 27 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/graphpost/interactive-dashboard/</guid>
      <description>body {text-align: justify}A lot of the times when dashboards are implemented they are with a very specific dataset. The problem with this is that we have to rebuild them from scratch every time. The advantage to use shiny is the possibility to create interactive dashboard or webapp without, and reusing the code already wirtten we can adapt it with new data. Here below, there are some examples of interactive dashboards.</description>
    </item>
    
  </channel>
</rss>